
#+SETUPFILE: ~/Documents/style.setup

#+OPTIONS: num:nil
#+LATEX_HEADER: \usepackage{ulem}
#+LATEX_HEADER: \usepackage{ctex}
#+LaTeX_HEADER: \sectionfont{\normalfont\scshape}
#+LaTeX_HEADER: \subsectionfont{\normalfont\itshape}
#+title: 暗时间

* 书单
** 非专业
   * 影响力
   * 编程之美
   * 高交通人士的七个习惯
   * 要事优先
   * Mean Genes
   * How we know what isn't so
   * 把时间当作朋友
   * Synaptic Self
   * Critical Thinking
   * Psychology of Problem Solving
   * Predictably Irrational
   * 奇特的一生
   * <<如何阅读一本书>>如何阅读一本书
   * 专注力
   * 社会性动物
   * 你的灯亮着吗?
   * 决策与判断
   * 别做正常的傻瓜(Predictably Irrational)
   * How to Think Straight about Psychology
   * 数学与猜想
   * Ask the Right Questions
   * 错不在我(Mistakes were made, but not by me)

** 专业
   * 深入浅出MFC (此处仅作记录)
   * Effective C++
   * Computer Architecture: Quantittive Approach
   * Computer Systems: A Programmer's Perspective

* 行为
** 剖析Boost源码
** 翻译计算机著作

* 学习与思考
  1. Goolge && Wiki
  2. 看书挑剔, 只看经典.
  3. 做读书笔记
  4. 睡前思考, 在思考中迷糊入睡.
     1. 将思考成为习惯的好处——避免焦虑.
  5. 重要的事情优先.
  6. 重要的事情营造比较大的时间块来完成.
  7. 多看心理学与思维的书, 因为它们是跨学科的
  8. 学习一项知识, 必须问自己三个重要问题:
     1. 它的本质是什么。
     2. 它的第一原则是什么。
     3. 它的知识结构是怎样的。
  9. 获得的多少并不取决于读了多少, 而取决于思考了多少、多深
  10. 善于利用小块时间.

* 时间管理
** 学习和思考的过程中常问自己的几个问题
   1. 我的问题到底是什么? ( 不要偏离主题)
   2. 我到底有什么收获呢? (总结 整理问题)
   3. 设想点自己正在将东西讲给别人听(有声思考; 能否讲出来是判断是否真正理解的最佳办法)
      1. 设想需要讲给一个不懂的人听 (迫使自己去挖掘知识背后最本质 往往也是最简单的解释)
   4. 时常反省和注意自己的思维过程.
   5. 养成反驳自己的想法的习惯
   6. 人的思维天生就是极易流于表现来不是事物的.
      条件反射性地问自己: 你真的理解了吗? 你真的理解了问题的本质了?问题的本质到底是什么?

** 重视知识的本质

** 重视积累的强大力量

** 抬其头来

** 杂项

   1. 退订RSS
   2. 总结最近得到的新知识吧
   3. 看本书吧
      (传统的)阅读和思考永远优于所谓的在互联网上汲取新知识, 后者往往浅表、不系统、退到根本没价值
   4. 制定简要的阅读计划:
      选出最近认为对你最有价值的书, 先总览一下, 决定阅读的顺序(哪些章节可以优先阅读).
      然后每天看一点. 并利用走路、吃饭、乘车或其他不适合带着书和笔的时间来总结看过的内容, 建立知识结构，抽取知识本质，与以往大脑中的知识建立联系

* 阅读方法

** 学习(尤其是阅读)的基本方法
   1. 趁着对一件事情有热情的时候, 一股脑儿把万事开头那个最难的阶段熬过去
   2. 根据主题来查阅资料, 而不是根据资料来查阅主题.
   3. 好资料, 坏资料:
      好资料的特点: 从问题出发; 重点介绍方法背后的理念, 注重直观解释, 而不是方法的技术细节; 按照方法被发明的时间流程来介绍
      坏资料的特点: 好资料的反面
   4. 学习一个东西之前, 道德要在大脑中积累充分的"疑惑感".
   5. 有选择地阅读.
   6. 为什么看不懂
      * 看得不够使劲.
      * 其中涉及到了你不懂的概念

** 杂项

*** 如果在阅读之前就能获得对一本书的老师的大致评估
    1. 看作者.
    2. 看目录和简介
    3. 看 Amazon 上的评价
       除了看整体打分之外, 更要看打分最低的人是怎么说的, 因为小众意见往往有可能来自那些真正懂行的人
    4. 看样章

*** 如何搜寻到好书.
    1. 同作者的著作.
    2. Amazon 相关推荐和主题相关的书列
    3. 一本好的著作在参考资料里面重点提到的其他著作
    4. 有时对于一个主题, 可以搜索到好心人总结的参考资源导引, 那是最好不过的

* 知识结构

** 抓住不变量

*** essential

**** 方法
     * 分析问题解决问题的思维方法
     * 判断与决策的方法

**** 技术
     * 硬件体系结构
     * 操作系统的一些重要的实现机制
     * 主流编程范式(OO, FP)是为了满足什么需求出现的(出现是为了解决什么问题), 是怎么解决的, 自身又引入了哪些新的问题, 从而适用哪些场景.
       *了解重要的思想, 而不是很细的技术细节(易变的东西)*

** Tip
   “学习一个小领域的时候，时时把“最终能够写出一篇漂亮的Survey”放在大脑中提醒自己，就能有助于在阅读和实践的时候有意无意地整理知识的结构、本质和重点，经过整理之后的知识理解更深刻，更不容易忘记，更容易被提取。”

* 阅读与思考

** 阅读的方法
   * [[如何阅读一本书][如何阅读一本书]]
   * 先把目录很仔细的看一看, 挑选最有趣的部分阅读
   * 边读边思考有习惯有助于加深印象; 看到觉得重要的地方, 随手做笔记.
   * 有的书整个就可以略读, 因为其中有意义的地方并不很多.
   * 书的分类:
     * 知识的
     * 思维的
   * 思维方面的是跨学科的, 任何时候都用得上.
   * 时间分配方面. 学习知识性的东西的过程中抽时间阅读思维方面的书, 边学边思.
   * 方法方面.
     知识性的东西, 注意两点
     1. 观其本质
     2. 观其大略

** 阅读的习惯
   * 任何一点时间都可以用于阅读.
   * 一旦停下来, 就不知道什么时候才会再拿起来读了.

** 思考的习惯
   [[http://mindhacks.cn/2008/04/08/reading-method/][阅读与思考 – 刘未鹏 | Mind Hacks]]
* 如何清晰地思考
** 错误的思维方式
*** 沿袭以前的经验
*** 关联当中寻找因果
** 总结
*** 思维捷径
*** 情绪
*** "思维定势"
*** 偏见
