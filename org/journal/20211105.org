* <2021-11-05 10:36>
** TODO srv 收到数据包后的拆包细节
** TODO 性能分析
   * =replmd_prepare_commit=: transaction_commit 入口

   * =ldb_kv_callback=: 数据库回调

   * =ldb_kv_search/add/modify/extended=: 查, 增, 改, 序号

   * =ldb_kv_(add/modify)=: =ldb_kv_(add/modify)_internal=

     =ldb_kv->kv_ops->store = ltdb_store= (ldb_tdb.c)

     PS: alternate: ~lmdb_key_value_ops~ (ldb_mdb.c)
     * tdb ops:
       #+begin_src c
         /* Returns 0 on fail.  On success, return offset of record, and fills
            in rec */
         static tdb_off_t tdb_find(struct tdb_context *tdb, TDB_DATA key, uint32_t hash,
                                   struct tdb_record *r);

         /* store an element in the database, replacing any existing element
            with the same key

            ,* return 0 on success, -1 on failure */
         _PUBLIC_ int tdb_store(struct tdb_context *tdb, TDB_DATA key, TDB_DATA dbuf,
                                int flag);
       #+end_src
     * tdb io:
       #+begin_src c
         /* open the database, creating it if necessary

            The open_flags and mode are passed straight to the open call on the
            database file. A flags value of O_WRONLY is invalid. The hash size
            is advisory, use zero for a default value.

            Return is NULL on error, in which case errno is also set.  Don't
            try to call tdb_error or tdb_errname, just do strerror(errno).

            @param name may be NULL for internal databases. */
         _PUBLIC_ struct tdb_context *tdb_open(const char *name, int hash_size,
                                               int tdb_flags, int open_flags,
                                               mode_t mode);

         /* read a lump of data at a specified offset, maybe convert */
         static int tdb_read(struct tdb_context *tdb, tdb_off_t off, void *buf,
                             tdb_len_t len, int cv);

         /* write a lump of data at a specified offset */
         static int tdb_write(struct tdb_context *tdb, tdb_off_t off, const void *buf,
                              tdb_len_t len);
       #+end_src

       #+begin_src plantuml :file performance.svg :cmdline -charset utf-8
         ldb -> ldb_tdb: convert data structure
         ldb_tdb -> tdb: ops
       #+end_src

       #+RESULTS:
       [[file:performance.svg]]

*** TODO command
    #+begin_src sh
      # 211
      samba-tool domain provision
      samba-tool user create ...
      samba-tool domain backup offline --targetdir=.

      # 210
      rm -rf backup && samba-tool domain backup restore --targetdir=backup --newservername=dc2 --backup-file=

      # 211
      samba-tool domain join bdtest211.com DC --server=dc2
    #+end_src
* Issues
** KCC occupies 100% CPU
