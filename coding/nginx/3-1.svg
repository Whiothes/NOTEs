<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="568px" preserveAspectRatio="none" style="width:1272px;height:568px;" version="1.1" viewBox="0 0 1272 568" width="1272px" zoomAndPan="magnify"><defs><filter height="300%" id="f1w7zsmfh7sc90" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="332" x="470.5" y="27.4023">图 3-1 Nginx HTTP 模块调用的简化流程</text><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="433.0371" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="190" y="104.998"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="332.1055" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="416" y="176.6191"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="172.5527" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="701" y="248.2402"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="71.6211" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1007" y="319.8613"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="29.3105" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1187" y="450.1035"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="78" x2="78" y1="73.6875" y2="556.0352"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="195" x2="195" y1="73.6875" y2="556.0352"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="421" x2="421" y1="73.6875" y2="556.0352"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="705.5" x2="705.5" y1="73.6875" y2="556.0352"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1012" x2="1012" y1="73.6875" y2="556.0352"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1192" x2="1192" y1="73.6875" y2="556.0352"/><rect fill="#FEFECE" filter="url(#f1w7zsmfh7sc90)" height="30.4883" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="8" y="38.1992"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="122" x="15" y="58.7344">worker 进程主循环</text><rect fill="#FEFECE" filter="url(#f1w7zsmfh7sc90)" height="30.4883" style="stroke: #A80036; stroke-width: 1.5;" width="70" x="158" y="38.1992"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="56" x="165" y="58.7344">事件模块</text><rect fill="#FEFECE" filter="url(#f1w7zsmfh7sc90)" height="30.4883" style="stroke: #A80036; stroke-width: 1.5;" width="82" x="378" y="38.1992"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="68" x="385" y="58.7344">HTTP 框架</text><rect fill="#FEFECE" filter="url(#f1w7zsmfh7sc90)" height="30.4883" style="stroke: #A80036; stroke-width: 1.5;" width="119" x="644.5" y="38.1992"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="105" x="651.5" y="58.7344">HTTP 处理模块1</text><rect fill="#FEFECE" filter="url(#f1w7zsmfh7sc90)" height="30.4883" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="941" y="38.1992"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="124" x="948" y="58.7344">HTTP 过滤模块链表</text><rect fill="#FEFECE" filter="url(#f1w7zsmfh7sc90)" height="30.4883" style="stroke: #A80036; stroke-width: 1.5;" width="142" x="1119" y="38.1992"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="128" x="1126" y="58.7344">其他 HTTP 处理模块</text><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="433.0371" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="190" y="104.998"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="332.1055" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="416" y="176.6191"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="172.5527" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="701" y="248.2402"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="71.6211" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1007" y="319.8613"/><rect fill="#FFFFFF" filter="url(#f1w7zsmfh7sc90)" height="29.3105" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1187" y="450.1035"/><polygon fill="#A80036" points="178,100.998,188,104.998,178,108.998,182,104.998" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="78" x2="184" y1="104.998" y2="104.998"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="85" y="100.2559">调用事件模块</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="200" x2="242" y1="134.3086" y2="134.3086"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="242" x2="242" y1="134.3086" y2="147.3086"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="201" x2="242" y1="147.3086" y2="147.3086"/><polygon fill="#A80036" points="211,143.3086,201,147.3086,211,151.3086,207,147.3086" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="84" x="207" y="129.5664">建立 TCP 连接</text><polygon fill="#A80036" points="404,172.6191,414,176.6191,404,180.6191,408,176.6191" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="200" x2="410" y1="176.6191" y2="176.6191"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="197" x="207" y="171.877">根据配置文件交由 HTTP 框架处理</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="426" x2="468" y1="205.9297" y2="205.9297"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="468" x2="468" y1="205.9297" y2="218.9297"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="427" x2="468" y1="218.9297" y2="218.9297"/><polygon fill="#A80036" points="437,214.9297,427,218.9297,437,222.9297,433,218.9297" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="106" x="433" y="201.1875">表求的 HTTP 包头</text><polygon fill="#A80036" points="689,244.2402,699,248.2402,689,252.2402,693,248.2402" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="426" x2="695" y1="248.2402" y2="248.2402"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="256" x="433" y="243.498">根据 location 配置调用 HTTP 模块处理请求</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="711" x2="753" y1="277.5508" y2="277.5508"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="753" x2="753" y1="277.5508" y2="290.5508"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="712" x2="753" y1="290.5508" y2="290.5508"/><polygon fill="#A80036" points="722,286.5508,712,290.5508,722,294.5508,718,290.5508" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="718" y="272.8086">处理请求</text><polygon fill="#A80036" points="995,315.8613,1005,319.8613,995,323.8613,999,319.8613" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="711" x2="1001" y1="319.8613" y2="319.8613"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="277" x="718" y="315.1191">发送 HTTP 响应时依次调用所有 HTTP 过滤模块</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="1017" x2="1059" y1="349.1719" y2="349.1719"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1059" x2="1059" y1="349.1719" y2="362.1719"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1018" x2="1059" y1="362.1719" y2="362.1719"/><polygon fill="#A80036" points="1028,358.1719,1018,362.1719,1028,366.1719,1024,362.1719" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="156" x="1024" y="344.4297">根据配置文件决定如何处理</text><polygon fill="#A80036" points="722,387.4824,712,391.4824,722,395.4824,718,391.4824" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="716" x2="1011" y1="391.4824" y2="391.4824"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="145" x="728" y="386.7402">所有 HTTP 过滤模块反回</text><polygon fill="#A80036" points="437,416.793,427,420.793,437,424.793,433,420.793" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="431" x2="705" y1="420.793" y2="420.793"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="443" y="416.0508">处理后返回</text><polygon fill="#A80036" points="1175,446.1035,1185,450.1035,1175,454.1035,1179,450.1035" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="426" x2="1181" y1="450.1035" y2="450.1035"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="261" x="433" y="445.3613">根据处理模块的逻辑决定是否执行 POST 请求</text><polygon fill="#A80036" points="437,475.4141,427,479.4141,437,483.4141,433,479.4141" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="431" x2="1191" y1="479.4141" y2="479.4141"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="443" y="474.6719">POST 请求返回</text><polygon fill="#A80036" points="211,504.7246,201,508.7246,211,512.7246,207,508.7246" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="205" x2="420" y1="508.7246" y2="508.7246"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="217" y="503.9824">控制权交还</text><polygon fill="#A80036" points="89,534.0352,79,538.0352,89,542.0352,85,538.0352" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="83" x2="194" y1="538.0352" y2="538.0352"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="95" y="533.293">控制权交还</text><!--MD5=[8b1c36a784c4254eda7ef98799cbad2c]
@startuml
title 图 3-1 Nginx HTTP 模块调用的简化流程

hide footbox
participant "worker 进程主循环" as A
participant "事件模块" as B
participant "HTTP 框架" as C
participant "HTTP 处理模块1" as D
participant "HTTP 过滤模块链表" as E
participant "其他 HTTP 处理模块" as F

A ->  B ++ : 调用事件模块
B ->  B    : 建立 TCP 连接
B ->  C ++ : 根据配置文件交由 HTTP 框架处理
C ->  C    : 表求的 HTTP 包头
C ->  D ++ : 根据 location 配置调用 HTTP 模块处理请求
D ->  D    : 处理请求
D ->  E ++ : 发送 HTTP 响应时依次调用所有 HTTP 过滤模块
E ->  E    : 根据配置文件决定如何处理
D <- - E - - : 所有 HTTP 过滤模块反回
C <- - D - - : 处理后返回
C ->  F ++ : 根据处理模块的逻辑决定是否执行 POST 请求
C <- - F - - : POST 请求返回
B <-  C - - : 控制权交还
A <-  B - - : 控制权交还
@enduml

PlantUML version 1.2020.01(Mon Feb 17 01:40:32 CST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 12+33
Operating System: Mac OS X
Default Encoding: UTF-8
Language: en
Country: CN
--></g></svg>